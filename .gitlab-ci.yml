---
.only_on_code_change: &only_on_code_change
  only:
    changes:
      - '**/*.go'
      - '**/*.mod'
      - '**/*.sum'
      - '**/Dockefile'

.only_on_helm_change: &only_on_helm_change
  only:
    changes:
      - '**/deploy/**/*'

.only_on_markdown_change: &only_on_markdown_change
  only:
    changes:
      - '**/*.md'

.only_on_yaml_change: &only_on_yaml_change
  only:
    changes:
      - '**/*.yml'
      - '**/*.yaml'

include:
  - project: 'klausklausen/templates'
    ref: main
    file: 'test.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'deploy.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'build.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'package.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'deploy.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'lint.yml'
  - project: 'klausklausen/templates'
    ref: main
    file: 'security.yml'

variables:
  TAG: $CI_COMMIT_BRANCH
  GO_IMAGE: golang:1.23

stages:
  - security
  - lint
  - test
  - build
  - package
  - deploy

# lint helm:
#   extends: .lint_helm_chart

# yaml lint:
#   extends: .lint_yaml

# go-lint:
#   stage: test
#   image: golangci/golangci-lint:v1.62.2
#   script:
#     - golangci-lint run -v
#   allow_failure: true


# prettier:
#   extends: .lint_prettier

# go-test:
#   stage: test
#   image: $GO_IMAGE
#   script:
#     - go test -v ./...

# lint
markdown lint:
  extends: .markdown_lint
  <<: *only_on_markdown_change
yaml lint:
  extends: .yaml_lint
  <<: *only_on_yaml_change
prettier lint:
  extends: .prettier
helm lint:
  extends: .helm_lint
  variables:
    HELM_CHART_DIR: deploy
  <<: *only_on_helm_change

# test
test build image:
  extends: .build_test
  variables:
    IMAGE_NAME: ${NEXUS_REPO_HOST}/${CI_PROJECT_NAME}
    IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
    BUILD_TARGET: prod
  <<: *only_on_code_change
render helm chart:
  extends: .render_helm_chart
  variables:
    HELM_CHART_DIR: deploy
  <<: *only_on_helm_change
run_test_suite:
  stage: test
  image: golang:1.23
  script:
    - TEST_ZONE_NAME=example.com make test
  <<: *only_on_code_change

# security
package scan:
  extends: .package_scan
  allow_failure: false
secret scan:
  extends: .secret_scan
  allow_failure: false

# build
build image:
  extends: .image_multi_arch
  variables:
    IMAGE_NAME: ${NEXUS_REPO_HOST}/${CI_PROJECT_NAME}
    IMAGE_TAG: ${CI_COMMIT_SHORT_SHA}
    BUILD_TARGET: prod
  <<: *only_on_code_change

# package
package image:
  extends: .image_tag
  variables:
    IMAGE_NAME: ${NEXUS_REPO_HOST}/${CI_PROJECT_NAME}
  tags:
    - amd64
  <<: *only_on_code_change
package helm:
  extends: .package_helm_chart
  variables:
    HELM_CHART_DIR: deploy
    PACKAGE_NAME: cert-manager-webhook-ipv64
  <<: *only_on_helm_change

# deploy
deploy helm:
  extends: .deploy_helm_chart
  variables:
    HELM_CHART_DIR: deploy
    PACKAGE_NAME: cert-manager-webhook-ipv64
  <<: *only_on_helm_change